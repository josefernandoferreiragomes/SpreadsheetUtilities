@page "/ganttGenerator"
@inject IGanttService GanttService
@inject IJSRuntime JS
@rendermode InteractiveServer
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components
@using SpreadsheetUtility.Library
@using System.Text.Json
@using SpreadsheetUtility.Services

<h3>Project Gantt Chart</h3>
<h4>Tasks file path:</h4>
<input type="text" @bind="taskDataPath" />
<h4>Team file path:</h4>
<input type="text" @bind="teamDataPath" />
<button @onclick="LoadGanttChartTasks">Load Tasks Gantt Chart</button>
<button @onclick="LoadGanttChartProjects">Load Projects Gantt Chart</button>
<p>
    <div>
        <button @onclick="SwapChartMode">Swap Chart Mode</button>
        <h4>Chart Mode</h4>
        <pre>@chartMode</pre>
    </div>
</p>
<p>Tasks Gantt Chart:</p> 
<div id="gantt-chart-tasks"></div>

<p>Projects Gantt Chart:</p>
<div id="gantt-chart-projects"></div>

@code {
    private string chartMode = "Week";
    private void SwapChartMode()
    {
        if (chartMode == "Week")
        {
            chartMode = "Day";
        }
        else if (chartMode == "Day")
        {
            chartMode = "Week";
        }
        LoadGanttChartTasks();
        LoadGanttChartProjects();
    }

    string taskDataPath = "";// = @"C:\\Users\\josef\\source\\repos\\SpreadsheetUtilities\\ExampleFiles\\tasks.xlsx";
    string teamDataPath = "";// = @"C:\\Users\\josef\\source\\repos\\SpreadsheetUtilities\\ExampleFiles\\team.xlsx";
    private string TaskDataJson = "";
    private string ProjectDataJson = "";

    private void LoadGanttChartTasks()
    {
        TaskDataJson = GanttService.ProcessExcelDataTasksFromFile(taskDataPath, teamDataPath);
        //await InvokeAsync(StateHasChanged);
        JS.InvokeVoidAsync("renderGanttTasks", TaskDataJson, chartMode, "true");
    }

    private void LoadGanttChartProjects()
    {
        ProjectDataJson = GanttService.ProcessExcelDataProjectsFromFile(taskDataPath, teamDataPath);
        //await InvokeAsync(StateHasChanged);
        JS.InvokeVoidAsync("renderGanttProjects", ProjectDataJson, chartMode, "true");
    }

}
