@page "/jsonGeneratorFromPaste"
@inject IGanttChartService GanttService
@inject IJSRuntime JS
@rendermode InteractiveServer
@using Newtonsoft.Json
@using Microsoft.AspNetCore.Components
@using SpreadsheetUtility.Library
@using System.Text.Json

<h3>Project Gantt Chart</h3>
<h4>Tasks file path:</h4>
<input type="text" @bind="taskDataPath" />
<h4>Team file path:</h4>
<input type="text" @bind="teamDataPath" />
<button @onclick="LoadGanttChartTasks">Load Tasks Gantt Chart</button>
<button @onclick="LoadGanttChartProjects">Load Projects Gantt Chart</button>
<p>Tasks Gantt Chart:</p> 
<div id="gantt-chart-tasks"></div>

<p>Projects Gantt Chart:</p>
<div id="gantt-chart-projects"></div>

@code {
    string taskDataPath = @"C:\\Users\\josef\\source\\repos\\SpreadsheetUtilities\\ExampleFiles\\tasks.xlsx";
    string teamDataPath = @"C:\\Users\\josef\\source\\repos\\SpreadsheetUtilities\\ExampleFiles\\team.xlsx";
    private string TaskDataJson;

    private void LoadGanttChartTasks()
    {
        TaskDataJson = GanttService.ProcessExcelDataTasks(taskDataPath, teamDataPath);
        //await InvokeAsync(StateHasChanged);
        JS.InvokeVoidAsync("renderGanttTasks", TaskDataJson);
    }

    private void LoadGanttChartProjects()
    {
        TaskDataJson = GanttService.ProcessExcelDataProjects(taskDataPath, teamDataPath);
        //await InvokeAsync(StateHasChanged);
        JS.InvokeVoidAsync("renderGanttProjects", TaskDataJson);
    }
}
